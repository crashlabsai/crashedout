/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MishapsMishapSlugRouteImport } from './routes/mishaps/$mishapSlug'
import { ServerRoute as ApiMishapsServerRouteImport } from './routes/api.mishaps'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MishapsMishapSlugRoute = MishapsMishapSlugRouteImport.update({
  id: '/mishaps/$mishapSlug',
  path: '/mishaps/$mishapSlug',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiMishapsServerRoute = ApiMishapsServerRouteImport.update({
  id: '/api/mishaps',
  path: '/api/mishaps',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/mishaps/$mishapSlug': typeof MishapsMishapSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/mishaps/$mishapSlug': typeof MishapsMishapSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/mishaps/$mishapSlug': typeof MishapsMishapSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/mishaps/$mishapSlug'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/mishaps/$mishapSlug'
  id: '__root__' | '/' | '/mishaps/$mishapSlug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MishapsMishapSlugRoute: typeof MishapsMishapSlugRoute
}
export interface FileServerRoutesByFullPath {
  '/api/mishaps': typeof ApiMishapsServerRoute
}
export interface FileServerRoutesByTo {
  '/api/mishaps': typeof ApiMishapsServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/mishaps': typeof ApiMishapsServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/mishaps'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/mishaps'
  id: '__root__' | '/api/mishaps'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiMishapsServerRoute: typeof ApiMishapsServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mishaps/$mishapSlug': {
      id: '/mishaps/$mishapSlug'
      path: '/mishaps/$mishapSlug'
      fullPath: '/mishaps/$mishapSlug'
      preLoaderRoute: typeof MishapsMishapSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/mishaps': {
      id: '/api/mishaps'
      path: '/api/mishaps'
      fullPath: '/api/mishaps'
      preLoaderRoute: typeof ApiMishapsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MishapsMishapSlugRoute: MishapsMishapSlugRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiMishapsServerRoute: ApiMishapsServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
